FROM ruby:3.0.3
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9 && \
    echo "deb http://repos.azulsystems.com/debian stable main" | tee /etc/apt/sources.list.d/zulu.list && \
    apt-get update -qq && \
    apt-get install -y curl git build-essential libpq-dev nodejs libpq-dev postgresql-client zip zulu-8 \
    --fix-missing \
    --no-install-recommends && \
    apt-get install chrpath libssl-dev libxft-dev -y && \
    apt-get install libfreetype6 libfreetype6-dev -y && \
    apt-get install libfontconfig1 libfontconfig1-dev -y && \
    gem update bundler

# Set up the shell RC file
COPY .env export-root-env.sh /root/
RUN chmod +x /root/export-root-env.sh && echo "source /root/export-root-env.sh" >> /root/.bashrc && echo "export OPENSSL_CONF=/etc/ssl/" >> /root/.bashrc

# Install some additional files
WORKDIR /aprexis
COPY wait-for-it.sh setup-for-rails.sh setup-for-platform.sh ./

# Install aprexis-engine (uncomment if using local repository)
WORKDIR /aprexis-engine
ADD ./aprexis-engine /aprexis-engine

# Disable IPV6
RUN cp /etc/hosts /tmp/hosts.original && sed -e 's/localhost ip6-localhost/ip6-localhost/' /tmp/hosts.original >/tmp/hosts

WORKDIR /aprexis-platform-5
COPY ./aprexis-platform-5/Gemfile ./aprexis-platform-5/Gemfile.lock ./
RUN git config --global --add safe.directory /aprexis-platform-5 && \
    export $(grep -v '^[[:space:]]*#' /root/.env | xargs) && \
    bundle config --local GITHUB__COM x-access-token:${APREXIS_ENGINE_TOKEN} && bundle install

# Install the application
ADD ./aprexis-platform-5 /aprexis-platform-5
